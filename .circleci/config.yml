version: 2.1
orbs:
  slack: circleci/slack@3.4.2
  browser-tools: circleci/browser-tools@1.4.1

parameters:
  ApiTrigger:
    type: boolean
    default: false
  notifyToSlack:
    type: boolean
    default: true


executors:
  node-executor:
    environment:
      TERM: xterm
    docker:
      - image: circleci/node:16-browsers

commands:

  restore-and-save-cache:
    description: "Restore and save cache"
    steps:
      - checkout
      - restore_cache:
          keys:
            - v2-deps-{{ .Branch }}-{{ checksum "package-lock.json" }}
            - v2-deps-{{ .Branch }}-
            - v2-deps-
      - run: npm install --save-dev
      - run: npx playwright install
      - save_cache:
          key: v2-deps-{{ .Branch }}-{{ checksum "package-lock.json" }}
          paths:
            - ~/.npm
            - ~/.cache

  send-notification-to-slack-channel:
    description: "Send notification to Slack channel"
    steps:
      - when:
          condition: << pipeline.parameters.notifyToSlack >>
          steps:
            - slack/status:
                channel: C041TRUTE4V
                fail_only: false
                only_for_branches: master
                webhook: $SLACK_WEBHOOK

  run-automation-tests:
    description: "Run automation tests"
    steps:
      - run:
          name: Run automation tests
          command: npx playwright test --project=chromium
      - store_artifacts:
          path: test-results
          destination: test-results
      - store_test_results:
          path: test-results


jobs:
  automation-tests-run:
    working_directory: ~/repo
    executor: node-executor
    parameters:
      NightlyRunNotify:
        type: boolean
        default: false
    parallelism: 3
    steps:
      - restore-and-save-cache
      - run-automation-tests

workflows:
  commit-workflow:
    when:
      and:
        - equal: [ false, << pipeline.parameters.ApiTrigger >>]
    jobs:
      - automation-tests-run:
          filters:
            branches:
               only:
                - master


  schedule-workflow:
    triggers:
      - schedule:
          cron: "0 5 * * 2,4"
          filters:
            branches:
              only:
                - master
    jobs:
      - automation-tests-run:
           notifyToSlack: true

  on-demand:
    when: << pipeline.parameters.ApiTrigger >>
    jobs:
      - automation-tests-run:
          notifyToSlack: true